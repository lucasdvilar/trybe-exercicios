/*ExercÃ­cio 1: Utilizando o INNER JOIN, encontre as vendas nacionais (domestic_sales) e internacionais (international_sales) de cada filme.
ðŸš€ ExercÃ­cio 2: Utilizando o INNER JOIN, faÃ§a uma busca que retorne o nÃºmero de vendas para cada filme que possui um nÃºmero maior de vendas internacionais (international_sales) do que vendas nacionais (domestic_sales).
ðŸš€ ExercÃ­cio 3: Utilizando o INNER JOIN, faÃ§a uma busca que retorne os filmes e sua avaliaÃ§Ã£o (rating) em ordem decrescente.
ExercÃ­cio 4: Utilizando o LEFT JOIN, faÃ§a uma busca que retorne todos os dados dos cinemas, mesmo os que nÃ£o possuem filmes em cartaz e, adicionalmente, os dados dos filmes que estÃ£o em cartaz nestes cinemas. Retorne os nomes dos cinemas em ordem alfabÃ©tica.
ExercÃ­cio 5: Utilizando o RIGHT JOIN, faÃ§a uma busca que retorne todos os dados dos filmes, mesmo os que nÃ£o estÃ£o em cartaz e, adicionalmente, os dados dos cinemas que possuem estes filmes em cartaz. Retorne os nomes dos cinemas em ordem alfabÃ©tica.*/

USE Pixar;

SELECT * FROM Movies;
SELECT * FROM BoxOffice;
SELECT * FROM Theater;

SELECT m.title, bo.domestic_sales, bo.international_sales
FROM Movies AS m
INNER JOIN BoxOffice AS bo
ON m.id = bo.movie_id;

SELECT m.title, bo.domestic_sales + bo.international_sales AS Sales
FROM Movies AS m
INNER JOIN BoxOffice AS bo
ON m.id = bo.movie_id
WHERE bo.international_sales > bo.domestic_sales;

SELECT m.title, bo.rating
FROM Movies AS m
INNER JOIN BoxOffice AS bo
ON m.id = bo.movie_id
ORDER BY bo.rating DESC;

SELECT t.*, m.*
FROM Theater as t
LEFT JOIN Movies as m
ON t.id = m.theater_id
ORDER BY t.name;

SELECT t.*, m.*
FROM Theater as t
RIGHT JOIN Movies as m
ON t.id = m.theater_id
ORDER BY t.name;
